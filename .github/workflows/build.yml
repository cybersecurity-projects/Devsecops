name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'staging'
      version:
        description: 'Application Version'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
            distribution: 'temurin'
      - name: Build JAR
        run: mvn clean package

  code_coverage:
    needs: build
    runs-on: ubuntu-latest
    steps:
       - name: jacoco-reporter
         uses: PavanMudigonda/jacoco-reporter@v5.0
         with:
            coverage_results_path: target/site/jacoco/jacoco.xml
  

  sca:
    needs: build
    runs-on: ubuntu-latest
    steps:
     # Generates a BoM and uploads it to OWASP Dependency Track
     - name: Generates BoM and upload to OWASP DTrack
       id: riskscoreFromDT
       uses:  Quobis/action-owasp-dependecy-track-check@main
       with:
         url: 'https://dtrack.quobis.com'
         key: '${{ secrets.SECRET_OWASP_DT_KEY }}'
         language: 'java'
      
  sast:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.projectName=Your Project Name \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

# Check the Quality Gate status.
  quality_gates:
    needs: sast
    runs-on: ubuntu-latest
    steps:
      - name: SonarQube Quality Gate check
        uses: opsverseio/sonarqube-quality-gate-action@0.1.0
      # Force to fail step after specific time.
        timeout-minutes: 5
        env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 
         SET_SONAR_PROJECT_STATUS: true 

  docker_build:
    needs: quality_gates
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: user/app:latest

  scan_image:
    needs: docker_build
    runs-on: ubuntu-latest
    steps:
       - name: Manual Trivy Setup
         uses: aquasecurity/setup-trivy@v0.2.0
         with:
          cache: true
          version: v0.60.1

       - name: Run Trivy vulnerability scanner in repo mode
         uses: aquasecurity/trivy-action@master
         with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
          skip-setup-trivy: false

  smoke_test:
    needs: scan_image
    runs-on: ubuntu-latest
    steps:
      - name: Run Smoke Test
        run: |
          docker run -d --name smokerun -p 8080:8080 $REGISTRY:${{ github.run_number }}
          sleep 90
          ./check.sh
          docker rm --force smokerun
